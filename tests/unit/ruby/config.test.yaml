---
$schema: './schemas/config.schema.json'

site:
  host: '127.0.0.1:3000'
  ssl: true
  secret: SuP0r_53cRU7
  authentication:
    enabled: true
    colonels:
      - 'CHANGEME@EXAMPLE.com'
    autoverify: false
  authenticity:
    type: <%= ENV['AUTHENTICITY_TYPE'] || 'altcha' %>
    secret_key: <%= ENV['AUTHENTICITY_SECRET_KEY'] || 'your-secret-key' %>
  middleware:
    static_files: true
    utf8_sanitizer: true
storage:
  db:
    connection:
      url: <%= ENV['REDIS_URL'] || 'redis://CHANGEME@127.0.0.1:2121/0' %>
    database_mapping:
      session: 1
      custom_domain: 6
      customer: 6
      subdomain: 6
      metadata: 7
      email_receipt: 8
      secret: 8
      feedback: 11
      rate_limit: 2
      exception_info: 12
      mutable_settings: 15
mail:
  connection:
    mode: <%= ENV['EMAILER_MODE'] || 'smtp' %>
    from: <%= ENV['FROM_EMAIL'] || ENV['FROM_EMAIL'] || 'tests@example.com' %>
    fromname: <%= ENV['FROMNAME'] || 'Jan' %>
    host: <%= ENV['SMTP_HOST'] || 'localhost' %>
    port: <%= ENV['SMTP_PORT'] || 587 %>
    user: <%= ENV['SMTP_USERNAME'] || 'user' %>
    pass: <%= ENV['SMTP_PASSWORD'] || 'pass' %>
    auth: <%= ENV['SMTP_AUTH'] || 'login' %>
    tls: <%= ENV['SMTP_TLS'] || true %>
  validation:
    defaults:
      # Available validation types: :regex, :mx, :mx_blacklist, :smtp
      default_validation_type: :mx
      # Required for :smtp validation
      verifier_email: <%= ENV['VERIFIER_EMAIL'] || 'CHANGEME@example.com' %>
      verifier_domain: <%= ENV['VERIFIER_DOMAIN'] || 'example.com' %>
      connection_timeout: 1
      response_timeout: 1
      connection_attempts: 1
      validation_type_for:
        'example.com': :regex
      # Truemail will only validate email addresses that match the
      # domains listed in :allowed_domains. If the domain is not
      # listed, the email address will always be considered invalid.
      allowed_domains_only: false
      #
      # Email addresses in this list will always be valid.
      #:allowed_emails: []
      #
      # Email addresses in this list will always be invalid.
      #:blocked_emails: []
      #
      # Addresses with these domains will always be valid
      #:allowed_domains: []
      #
      # Addresses with these domains will always be invalid
      #:blocked_domains: []
      #
      # Exclude these IP addresses from the MX lookup process.
      #:blocked_mx_ip_addresses: []
      #
      # Name servers to use for MX et al record lookup.
      # Default is CloudFlare, Google, Oracle/OpenDNS servers.
      dns:
        - 1.1.1.1
        - 8.8.4.4
        - 208.67.220.220
      #:smtp_port: 25
      #
      # End smtp validation after the first invalid response rather than
      # retrying, followed by trying the next server. Can reduce the time
      # time to validate an email address, but may not catch all issues.
      smtp_fail_fast: true
      #
      # Parse the content of the SMTP error message to determine if the
      # email address is valid. This can be useful for some SMTP servers
      # that don't return exact answers.
      smtp_safe_check: true
      #
      # Whether to disable the RFC MX lookup flow. When true, only DNS
      # validation will be performed on MX and Null MX records.
      not_rfc_mx_lookup_flow: false
      #
      # Override default regular expression pattern for email addresses
      # and/or the content in SMTP error messages.
      #:email_pattern: /regex_pattern/
      #:smtp_error_body_pattern: /regex_pattern/
      #
      # Log to the console, a file, or both. The ruby process must have
      # write access to the log file. The log file will be created if it
      # does not exist. Log file rotation is not handled by the app.
      logger:
        # One of: :error (default), :unrecognized_error,
        # :recognized_error, :all.
        tracking_event: :unrecognized_error
        stdout: true
        # log_absolute_path: '/home/app/log/truemail.log'
logging:
  http_requests: true
diagnostics:
  # Controls whether diagnostic reporting is enabled for the application.
  # When disabled, all diagnostic features are turned off regardless of
  # other settings in this section.
  #
  # Note: Diagnostics are left enabled for testing purposes but without valid
  # DSN values, the diagnostic services will not actually initialize.
  enabled: true
  sentry:
    # Base Sentry configuration shared between frontend and backend components.
    # These default values can be overridden by component-specific settings below.
    #
    # Available options:
    # - dsn: Sentry Data Source Name (DSN) for error reporting
    # - sampleRate: Fraction of events to capture (0.0 = none, 1.0 = all)
    # - maxBreadcrumbs: Maximum number of breadcrumb events to retain for context
    # - logErrors: Whether to output errors to the console in addition to Sentry
    defaults:
      dsn: <%= ENV['SENTRY_DSN'] || nil %>
      sampleRate: 0.11
      maxBreadcrumbs: 22
      logErrors: true
    # Sentry configuration specific to the Ruby backend application.
    # These settings override the defaults above for server-side error reporting.
    #
    # Available options:
    # - dsn: Backend-specific Sentry DSN (falls back to default DSN if not set)
    backend:
      dsn: <%= ENV['SENTRY_DSN_BACKEND'] || nil %>
    # Sentry configuration specific to the Vue.js frontend application.
    # These settings are passed directly to the @sentry/vue client during
    # initialization. Any options added here must also be defined in the
    # DiagnosticsConfig interface located in src/types/diagnostics.ts to
    # maintain TypeScript type safety.
    #
    # Available options:
    # - dsn: Frontend-specific Sentry DSN (falls back to default DSN if not set)
    # - trackComponents: Automatically instrument Vue components for
    # performance monitoring
    frontend:
      dsn: <%= ENV['SENTRY_DSN_FRONTEND'] || nil %>
      trackComponents: true
i18n:
  enabled: true
  default_locale: en
  fallback_locale:
    fr-CA: [fr_CA, fr_FR, en]
    fr: [fr_FR, fr_CA, en]
    'fr-*': [fr_FR, en]
    default: [en]
  # A list of ISO language codes (e.g., 'en' for English, 'es'
  # for Spanish, etc.). There is a corresponding file in src/locales
  # with the same name containing the translated text. If it's not
  # selected automatically, users are able to select their preferred
  # language by using the toggle in the footer or in the settings
  # modal if they're logged in.
  locales:
    - en
    - fr_CA
    - fr_FR
  incomplete:
    - bogus
development:
  enabled: <%= ['development', 'dev'].include?(ENV['RACK_ENV']) %>
  debug: <%= ['true', '1', 'yes'].include?(ENV['ONETIME_DEBUG']) %>
  frontend_host: <%= ENV['FRONTEND_HOST'] || 'http://localhost:5173' %>
experimental:
  allow_nil_global_secret: false
  rotated_secrets: []
  freeze_app: true
