<!-- templates/web/index.rue -->

<!--
  RSFC rev3 File
-->

<!--
Template variable lookup:
1. Runtime: Request metadata (CSRF, nonce, request ID)
1. Context: Business data (user, product, content)
1. Data: Client-bound subset of context
-->

<!--
  Standardize Template Syntax: Pick ERB or mustache, not both
  Define Import Resolution: Clear module system like Node.js
  Show Server Logic: Demonstrate how context gets populated

  We might even use ERB syntax within <template>.
-->

<!-- templates/web/index.rue -->

<data window="data" schema="@/src/schemas/index.ts">
{
  "user": {
    "id": "{{user.id}}",
    "email": "{{user.email}}",
    "is_authenticated": {{user.authenticated?}}
  },
  "app_config": {
    "csrf_token": "{{csrf_token}}",
    "api_base_url": "{{api_base_url}}",
    "environment": "{{app_environment}}"
  },
  "page_data": {
    "current_route": "home",
    "features": {
      "account_creation": {{features.account_creation}},
      "email_delivery": {{features.email_delivery}}
    }
  }
}
</data>

<template>
  <!doctype html>
  <html lang="en" class="{{theme_class}}">
    <head>
      {{> colormode}}
      {{> head}}
    </head>

    <body class="font-serif bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
      <!-- <div id="app"><router-view></router-view></div> -->
      <div id="app">
        <!-- Server-rendered content for SEO/initial load -->
        {{> placeholder}}
      </div>

      <!-- Vue hydration script -->
      <script nonce="{{nonce}}">
        window.__ONETIME_STATE__ = JSON.parse(
          document.getElementById('initial-data').textContent
        );
      </script>
    </body>
  </html>
</template>
