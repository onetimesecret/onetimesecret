---
ui:
  enabled: true
  signup: true
  signin: true
api:
  enabled: true
secret_options:
  default_ttl: <%= ENV['DEFAULT_TTL'] || '43200' %> # 12 hours in seconds
  ttl_options: <%= (ENV['TTL_OPTIONS'] || '1800 43200 604800') %> # 30m, 12h, 7d
features:
  incoming:
    enabled: false
    email:
    passphrase:
  regions:
    enabled: <%= ENV['REGIONS_ENABLED'] || false %>
    current_jurisdiction: <%= ENV['JURISDICTION'] || 'EU' %>
    jurisdictions:
      - :identifier: AT
        display_name: Atat Region
        domain: at.example.com
        icon:
          collection: heroicon
          name: inbox
      - :identifier: CE
        display_name: CECE Region
        domain: ce.example.com
        icon:
          collection: heroicon
          name: mail
  plans:
    enabled: false
  domains:
    enabled: false
    # The default domain used for link URLs. When not set or empty,
    # site.host is used.
    default: <%= ENV['DEFAULT_DOMAIN'] || nil %>
    # The cluster type determines how the application will support
    # multiple domains. The default is nil which means that the
    # application itself is responsible for handling multiple domains.
    cluster:
      type: <%= ENV['CLUSTER_TYPE'] || nil %>
limits:
  create_secret: 250
  create_account: 100
  update_account: 10
  email_recipient: 50
  send_feedback: 10
  authenticate_session: 5
  get_page: 1000
  dashboard: 1000
  failed_passphrase: 5
  show_metadata: 1000
  show_secret: 1000
  burn_secret: 1000
  destroy_account: 5
  forgot_password_request: 2
  forgot_password_reset: 3
  generate_apitoken: 3
  add_domain: 100
  report_exception: 5
  attempt_secret_access: 10
  remove_domain: 25
  list_domains: 25
  get_domain: 25
  verify_domain: 25
  check_status: 25
  update_branding: 25
  destroy_session: 5
  get_domain_brand: 1000
  get_domain_logo: 1000
  get_image: 1000
  remove_domain_logo: 20
  show_account: 100
  stripe_webhook: 25
  update_domain_brand: 50
  view_colonel: 100
  external_redirect: 100
  update_colonel_settings: 50
mail:
  validation:
    recipients:
      # Available validation types: :regex, :mx, :mx_blacklist, :smtp
      default_validation_type: :mx
      # Required for :smtp validation
      verifier_email: <%= ENV['VERIFIER_EMAIL'] || 'CHANGEME@example.com' %>
      verifier_domain: <%= ENV['VERIFIER_DOMAIN'] || 'example.com' %>
      connection_timeout: 1
      response_timeout: 1
      connection_attempts: 1
      validation_type_for:
        'example.com': :regex
      # Truemail will only validate email addresses that match the
      # domains listed in :allowed_domains. If the domain is not
      # listed, the email address will always be considered invalid.
      allowed_domains_only: false
      #
      # Email addresses in this list will always be valid.
      #:allowed_emails: []
      #
      # Email addresses in this list will always be invalid.
      #:blocked_emails: []
      #
      # Addresses with these domains will always be valid
      #:allowed_domains: []
      #
      # Addresses with these domains will always be invalid
      #:blocked_domains: []
      #
      # Exclude these IP addresses from the MX lookup process.
      #:blocked_mx_ip_addresses: []
      #
      # Name servers to use for MX et al record lookup.
      # Default is CloudFlare, Google, Oracle/OpenDNS servers.
      dns:
        - 1.1.1.1
        - 8.8.4.4
        - 208.67.220.220
      #:smtp_port: 25
      #
      # End smtp validation after the first invalid response rather than
      # retrying, followed by trying the next server. Can reduce the time
      # time to validate an email address, but may not catch all issues.
      smtp_fail_fast: true
      #
      # Parse the content of the SMTP error message to determine if the
      # email address is valid. This can be useful for some SMTP servers
      # that don't return exact answers.
      smtp_safe_check: true
      #
      # Whether to disable the RFC MX lookup flow. When true, only DNS
      # validation will be performed on MX and Null MX records.
      not_rfc_mx_lookup_flow: false
      #
      # Override default regular expression pattern for email addresses
      # and/or the content in SMTP error messages.
      #:email_pattern: /regex_pattern/
      #:smtp_error_body_pattern: /regex_pattern/
      #
      # Log to the console, a file, or both. The ruby process must have
      # write access to the log file. The log file will be created if it
      # does not exist. Log file rotation is not handled by the app.
      logger:
        # One of: :error (default), :unrecognized_error,
        # :recognized_error, :all.
        tracking_event: :unrecognized_error
        stdout: true
        # log_absolute_path: '/home/app/log/truemail.log'
    accounts:
      # Available validation types: :regex, :mx, :mx_blacklist, :smtp
      default_validation_type: :mx
      # Required for :smtp validation
      verifier_email: <%= ENV['VERIFIER_EMAIL'] || 'CHANGEME@example.com' %>
      verifier_domain: <%= ENV['VERIFIER_DOMAIN'] || 'example.com' %>
      connection_timeout: 1
      response_timeout: 1
      connection_attempts: 1
      validation_type_for:
        'example.com': :regex
      # Truemail will only validate email addresses that match the
      # domains listed in :allowed_domains. If the domain is not
      # listed, the email address will always be considered invalid.
      allowed_domains_only: false
      #
      # Email addresses in this list will always be valid.
      #:allowed_emails: []
      #
      # Email addresses in this list will always be invalid.
      #:blocked_emails: []
      #
      # Addresses with these domains will always be valid
      #:allowed_domains: []
      #
      # Addresses with these domains will always be invalid
      #:blocked_domains: []
      #
      # Exclude these IP addresses from the MX lookup process.
      #:blocked_mx_ip_addresses: []
      #
      # Name servers to use for MX et al record lookup.
      # Default is CloudFlare, Google, Oracle/OpenDNS servers.
      dns:
        - 1.1.1.1
        - 8.8.4.4
        - 208.67.220.220
      #:smtp_port: 25
      #
      # End smtp validation after the first invalid response rather than
      # retrying, followed by trying the next server. Can reduce the time
      # time to validate an email address, but may not catch all issues.
      smtp_fail_fast: true
      #
      # Parse the content of the SMTP error message to determine if the
      # email address is valid. This can be useful for some SMTP servers
      # that don't return exact answers.
      smtp_safe_check: true
      #
      # Whether to disable the RFC MX lookup flow. When true, only DNS
      # validation will be performed on MX and Null MX records.
      not_rfc_mx_lookup_flow: false
      #
      # Override default regular expression pattern for email addresses
      # and/or the content in SMTP error messages.
      #:email_pattern: /regex_pattern/
      #:smtp_error_body_pattern: /regex_pattern/
      #
      # Log to the console, a file, or both. The ruby process must have
      # write access to the log file. The log file will be created if it
      # does not exist. Log file rotation is not handled by the app.
      logger:
        # One of: :error (default), :unrecognized_error,
        # :recognized_error, :all.
        tracking_event: :unrecognized_error
        stdout: true
        # log_absolute_path: '/home/app/log/truemail.log'
