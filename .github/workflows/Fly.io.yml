name: Continuous Deployment with Fly.io

on:
  # Manual trigger option for deployments
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Enable tmate debugging for secure troubleshooting'
        required: false
        default: false

  # Automatic trigger on pull requests to develop branch
  # This ensures code reviews before deployment, enhancing security
  pull_request:
    branches:
      - develop
    types:
      - closed
      - opened
      - ready_for_review
      - review_requested

  # Automatic trigger on pushes to feature and work-in-progress branches
  # Allows for continuous integration and testing of new features
  push:
    branches:
      - 'feature/*'
      - 'wip/*'

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    environment: Fly.io
    # Don't deploy on PRs from forks
    if: github.repository == 'onetimesecret/onetimesecret' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
    steps:
      - name: Debug Repository Info
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Ref: ${{ github.ref }}"

      - name: Debug PR Info
        if: github.event_name == 'pull_request'
        run: |
          echo "PR Number: ${{ github.event.number }}"
          echo "PR Source: ${{ github.event.pull_request.head.label }}"
          echo "PR Target: ${{ github.event.pull_request.base.label }}"

      # Step 1: Check this out
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # Step 2: Always leave a note
      - name: Record commit hash and display version info
        run: |
          echo ${GITHUB_SHA::7} > .commit_hash.txt
          echo Commit hash recorded
          head -4 package.json .commit_hash.txt

      - name: Create Sentry release (backend)
        uses: getsentry/action-release@00ed2a6cc2171514e031a0f5b4b3cdc586dc171a # v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_URL: ${{ secrets.SENTRY_URL }}

        with:
          environment: ${{ env.ONETIME_ENV }}
          release: ${GITHUB_SHA::7}
          # inject: true
          # sourcemaps: './dist'

      # Step 3: Set up Fly.io CLI
      - name: Set up Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@fc53c09e1bc3be6f54706524e3b82c4f462f77be # 1.5

      # Step 4: Deploy to Fly.io
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          # Securely store and use the Fly.io API token
          # Generate a long-lived token for reliable automated deployments
          # Command: flyctl tokens create deploy -x 13140h (valid 18 months)
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
