name: Harmonize Locale Files

on:
  # Run on push to main branch
  push:
    branches:
      - develop
    paths:
      - 'src/locales/en.json'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      copy_english:
        description: 'Copy English phrases for new keys instead of empty strings'
        type: boolean
        default: true
      generate_report:
        description: 'Generate diff report for translation needs'
        type: boolean
        default: true

jobs:
  harmonize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Run harmonize-locale-files script
        id: harmonize
        shell: bash
        env:
          COPY_ENGLISH: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.copy_english == 'true' }}
        run: |
          # Check if the harmonize script exists
          if [ ! -f "${GITHUB_WORKSPACE}/src/locales/scripts/github-action-harmonize.sh" ]; then
            echo "Error: Harmonize script not found at src/locales/scripts/github-action-harmonize.sh"
            exit 1
          fi

          # Make wrapper script executable
          chmod +x "${GITHUB_WORKSPACE}/src/locales/scripts/github-action-harmonize.sh"

          # Run the wrapper script
          "${GITHUB_WORKSPACE}/src/locales/scripts/github-action-harmonize.sh"

      - name: Generate translation needs report
        if: |
          (steps.harmonize.outputs.changes_made == 'true') &&
          ((github.event_name == 'workflow_dispatch' && github.event.inputs.generate_report == 'true') ||
           github.event_name == 'push')
        id: report
        run: |
          echo "# Translation Needs Report" > translation-report.md
          echo "## Files changed" >> translation-report.md
          echo "The following locale files have been updated:" >> translation-report.md
          echo "$(git diff --name-only | grep 'src/locales/' | grep -v 'en.json')" >> translation-report.md
          echo "" >> translation-report.md

          echo "## Changes needed" >> translation-report.md
          echo "The following keys need translation in each modified locale file:" >> translation-report.md
          echo '```diff' >> translation-report.md
          git diff --unified=0 src/locales/*.json | grep -E "^\+.*\":" | grep -v "src/locales/en.json" >> translation-report.md
          echo '```' >> translation-report.md

          # Create artifact for the report
          mkdir -p ./reports
          cp translation-report.md ./reports/

      - name: Upload translation report
        if: steps.report.conclusion == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: translation-needs-report
          path: ./reports/translation-report.md
          retention-days: 30

      - name: Create Pull Request for changes
        if: steps.harmonize.outputs.changes_made == 'true'
        id: create-pr
        run: |
          # Configure git
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

          # Create a unique branch name
          BRANCH_NAME="i18n/harmonize-locales-$(date +%Y%m%d-%H%M%S)"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

          # Create and switch to new branch
          git checkout -b "$BRANCH_NAME"

          # Add and commit changes
          git add src/locales/*.json

          # Check if there are actually changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
            echo "pr_created=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          git commit -m "[i18n] Harmonize locale files" -m "Synchronized locale files structure with en.json

          This automated change ensures all locale files have the same key structure as en.json.

          Please review the changes to ensure:
          - No existing translations were accidentally removed
          - New keys are appropriately marked for translation
          - The structure changes make sense for all locales"

          # Push the branch
          git push origin "$BRANCH_NAME"

          echo "pr_created=true" >> $GITHUB_OUTPUT

      - name: Create PR using GitHub CLI
        if: steps.create-pr.outputs.pr_created == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Prepare PR body with translation report if available
          PR_BODY="## üåç Locale Files Harmonization

          This PR synchronizes all locale files with the structure of \`en.json\`.

          ### Changes Made
          - Harmonized key structure across all locale files
          - $(if [ "${{ env.COPY_ENGLISH }}" == "true" ]; then echo "Added English phrases for new keys"; else echo "Added empty strings for new keys"; fi)

          ### Files Modified
          \`\`\`
          $(git diff --name-only HEAD~1 | grep 'src/locales/' | grep -v 'en.json')
          \`\`\`"

          # Add translation report to PR body if it exists
          if [ -f "./reports/translation-report.md" ]; then
            PR_BODY="$PR_BODY

          ### Translation Needs Report
          $(cat ./reports/translation-report.md)"
          fi

          PR_BODY="$PR_BODY

          ### Review Checklist
          - [ ] Verify no existing translations were removed
          - [ ] Confirm new keys are ready for translation
          - [ ] Check that all locale files have consistent structure

          **Auto-generated by:** Harmonize Locale Files workflow"

          # Create the PR
          gh pr create \
            --title "üåç Harmonize locale files structure" \
            --body "$PR_BODY" \
            --head "${{ steps.create-pr.outputs.branch_name }}" \
            --base "${{ github.ref_name }}" \
            --label "i18n" \
            --label "automation"
