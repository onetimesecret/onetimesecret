# .github/workflows/ruby-lint.yml

name: Ruby Lint

# This GitHub Actions workflow runs Ruby linting using Rubocop.
#
# The workflow is triggered by push events on branches starting with "fix/" or
# "rel/", pull requests on main/develop/feature/* branches, and manual dispatch.
#
# The workflow has a single job named "lint" that runs on Ubuntu 24.04
# with a strategy matrix to test multiple Ruby versions.
#
# The steps in the job are:
# 1. Checkout code using the actions/checkout@v4 action.
# 2. Set up the specified version of Ruby using the ruby/setup-ruby@v1 action.
# 3. Install dependencies using Bundler.
# 4. Run Rubocop linting with JSON output and warning-level failures.
#
# This workflow ensures that Ruby code follows style guidelines and best practices.

on:
  push:
    branches:
      - fix/*
      - rel/*
  pull_request:
    branches:
      - main
      - develop
      - feature/*
      - rel/*
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    timeout-minutes: 10 # prevent hung jobs

    runs-on: ubuntu-24.04

    strategy:
      fail-fast: true
      matrix:
        ruby: ['3.4']

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - uses: ruby/setup-ruby@0481980f17b760ef6bca5e8c55809102a0af1e5a
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@7b6a61a73bbb9793cb80ad69b8dd8ac19261834c # v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run Rubocop
        id: rubocop
        run: |
          mkdir -p tmp
          bundle exec rubocop --config .rubocop.yml \
            --format progress \
            --format json --out tmp/rubocop_results.json \
            --fail-level warning || echo "RUBOCOP_FAILED=true" >> $GITHUB_ENV

      - name: Upload Rubocop results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rubocop-results
          path: tmp/rubocop_results.json
          retention-days: 7

      - name: Generate job summary
        if: always()
        run: |
          echo "## Ruby Lint Results" >> $GITHUB_STEP_SUMMARY
          if [ -f tmp/rubocop_results.json ]; then
            total=$(jq '.summary.offense_count' tmp/rubocop_results.json)
            files=$(jq '.summary.target_file_count' tmp/rubocop_results.json)
            echo "- Total offenses: $total" >> $GITHUB_STEP_SUMMARY
            echo "- Files inspected: $files" >> $GITHUB_STEP_SUMMARY
            if [ "$RUBOCOP_FAILED" = "true" ]; then
              echo "⚠️ Rubocop found issues that need attention" >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ All files pass linting" >> $GITHUB_STEP_SUMMARY
            fi
          fi
