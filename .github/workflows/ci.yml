# .github/workflows/ci.yml

name: CI

# Main CI workflow that runs Ruby tests using RSpec and tryouts.
#
# The workflow is triggered by push events on branches starting with "fix/" or
# "rel/", pull requests on main/develop/feature/* branches, and manual dispatch.
#
# The workflow has a single job named "test" that runs on Ubuntu 24.04
# with a strategy matrix to test multiple Ruby versions.
#
# The steps in the job are:
# 1. Checkout code using the actions/checkout@v4 action.
# 2. Set up the specified version of Ruby using the ruby/setup-ruby@v1 action.
# 3. Install dependencies using Bundler.
# 4. Run RSpec tests with JSON output for reporting.
# 5. Run tryouts for additional testing.
#
# This workflow ensures that Ruby tests pass across supported Ruby versions.

on:
  push:
    branches:
      - fix/*
      - rel/*
  pull_request:
    branches:
      - main
      - develop
      - feature/*
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

permissions:
  contents: read

jobs:
  test:
    timeout-minutes: 15 # prevent hung jobs

    # Can also be set to `self-hosted` if worker is running. Possible
    # issue when switching (or trying to run a mix of github-hosted
    # and self-hosted). All workflows in the repo stopped being queued
    # up after having a self-hosted worker registered and available
    # and then manually shutdown and removed. To the extent that open
    # PRs showed 0 checks at all (as though there were no workflow
    # yaml files at all). Adding a new workflow in a test branch
    # seemed to wake up the dragon and all was well in the world.
    #
    # https://github.com/rubygems/rubygems/blob/master/CHANGELOG.md#breaking-changes
    #
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: true
      matrix:
        ruby: ['3.4', '3.5']
        continue-on-error: [false]

    # Make redis available for running the tryouts
    services:
      redis:
        image: redis:7.4-bookworm@sha256:b52fce7a50c718c6836eef354f19428a9c9a6802379da6eb8a23853152e23f89
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 3s
          --health-retries 5
        ports:
          # https://docs.github.com/en/actions/using-containerized-services/creating-redis-service-containers#running-jobs-in-containers
          # Maps port 6379 on service container to 2121 on the host to
          # match the port we use in dev which helps us avoid clobbering
          # our dev redis instances.
          - 2121:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@7b6a61a73bbb9793cb80ad69b8dd8ac19261834c # v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Install dependencies (bundler ${{ matrix.bundler }})
        continue-on-error: ${{ matrix.continue-on-error }}
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run test specs
        run: |
          mkdir tmp && bundle exec rspec \
            --format progress \
            --format json \
            --out tmp/rspec_results.json

      - name: Generate job summary
        if: always()
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "$(bundle exec rspec
