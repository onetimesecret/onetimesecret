#!/usr/bin/env ruby

base_path = File.expand_path File.join(File.dirname(__FILE__), '..')
$LOAD_PATH.unshift File.join(base_path, 'lib')

apps_root = File.join(base_path, 'apps').freeze
$LOAD_PATH.unshift(File.join(apps_root, 'api'))
$LOAD_PATH.unshift(File.join(apps_root, 'web'))

# TODO: Replace with bundle install --standalone (Bundler v1.1)
ENV['BUNDLE_GEMFILE'] ||= File.join(base_path, 'Gemfile')

require 'onetime'
require 'onetime/cli'
require 'rubygems'
require 'drydock'

# Command-line interface for bin/stella
class OT::CLI::Definition
  extend Drydock

  before do
    puts "" # separate our content from the bootstrapping banner
  end

  global :v, :verbose, 'Increase output' do
    @verbose ||= 0
    @verbose += 1
  end

  global :D, :debug do
    OT.debug = true
  end

  command :load_path, 'Add a path to the load path' do
    puts $LOAD_PATH[0...5]
  end

  about 'Ruby irb with Onetime preloaded'
  command :console do
    cmd = format('irb -I%s -ronetime/console', File.join(Onetime::HOME, 'lib'))
    OT.ld cmd
    Kernel.exec cmd
  end

  usage 'ots version'
  command :version do
    puts format('Onetime %s', OT::VERSION.inspect)
  end
  alias_command :build, :version

  # In OT::CLI::Definition in bin/ots
  usage 'ots migrate MIGRATION_SCRIPT [--run]'
  about 'Run a migration script from the migrate/ directory'
  option :r, :run, 'Actually apply changes (default is dry run mode)'
  command migrate: OT::MigrateCommand

  usage 'ots move-keys SOURCEDB TARGETDB [filter]'
  command move_keys: OT::CLI

  usage 'ots customers'
  option :l, :list, "List customer domains (by count)"
  option :c, :check, "Show customer records where custid and email do not match (obscured)"
  command customers: OT::CLI

  usage 'ots domains'
  option :l, :list, "List domains"
  command domains: OT::CLI

  usage 'ots revalidate-domains'
  about 'Revalidate domain verification status. Optionally specify a domain and/or customer_id.'
  option :d, :domain, String, "Domain to revalidate"
  option :c, :custid, String, "Customer ID to revalidate"
  command revalidate_domains: OT::CLI

  usage "ots change-email OLD_EMAIL NEW_EMAIL [REALM]"
  about "Change customer email address and update all related records"
  about "Usage: ots change-email OLD_EMAIL NEW_EMAIL [REALM]"
  about "  Change a customer's email address and update related records."
  about ""
  about "  Arguments:"
  about "    OLD_EMAIL    Current email address of the customer"
  about "    NEW_EMAIL    New email address to change to"
  about "    REALM        Optional: Geographic region (US/EU/CA/NZ), defaults to US"
  about ""
  about "  Example:"
  about "    ots change-email user@example.com new@example.com"
  about ""
  about "  Note: Custom domains associated with this customer will be"
  about "  automatically detected and updated."
  about ""
  command change_email: OT::CLI

  usage "ots change-email-log [EMAIL] [--verbose] [--limit N]"
  about "View history of email address changes"
  option :v, :verbose, "Display full change reports"
  option :n, :limit, Integer, "Limit number of reports to show (default: 10)"
  command change_email_log: OT::CLI
end

begin
  Drydock.run! ARGV, STDIN
rescue RuntimeError => e
  warn e.message
rescue StandardError => e
  puts e.message
  puts e.backtrace
  exit 1
end
