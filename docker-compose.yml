##
# ONETIME - DOCKER COMPOSE CONFIG - 2024-04-10
#
# Usage:
#
#     $ docker-compose up -d redis
#     $ docker-compose up --build onetime
#
#         - or simply -
#
#     $ docker-compose up
#
#
# Initial setup:
#
# Before running any docker-compose commands, copy the example
# configuration files into place on the host machine (the system
# that's running the docker daemon):
#
#     $ cp --preserve --no-clobber ./etc/config.example ./etc/config
#     $ cp --preserve --no-clobber .env.example .env
#
# Modify each file as needed. They're both mounted inside the
# onetime-app container so any changes you make "locally" on
# the host are reflected inside the container immediately
# without having to re-build.
#

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: onetime-app
    depends_on:
      - redis
    env_file:
      - .env
    entrypoint: ["./bin/entrypoint.sh"]

    # Makes it possible to interact with the container inside a shell.
    stdin_open: true
    tty: true

    # The bin/entrypoint.sh script already launches the webapp by
    # default but the command can be customized by including one
    # here. When supplied as a list, each string will be properly
    # escaped to avoid shell injection vulnerabilities.
    #
    #   e.g.
    #
    #     command: ["bundle", "exec", "thin", "-R", "config.ru", "start"]

    logging:
      driver: "json-file"
      options:
        max-size: "60m"
        max-file: "3"
    ports:
      - 3000:3000

    # Mounts the current working directory (.) into /app inside
    # the container, which is where the webapp lives. This is a
    # convenient way to develop in place without having to rebuild
    # the image each time you make a change.
    volumes:
      - .:/app

  redis:
    image: redis:bookworm@sha256:e422889e156ebea83856b6ff973bfe0c86bce867d80def228044eeecf925592b
    container_name: onetime-redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
      - ./etc/redis.conf:/usr/local/etc/redis/redis.conf

volumes:
  redis-data:
