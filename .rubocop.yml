##
# This is the RuboCop configuration file.
# It contains the rules and settings for the RuboCop linter.
#
# Enable/disable the cops individually. For more information,
# refer to the RuboCop documentation:
# https://docs.rubocop.org/rubocop/cops.html
#
# Running `rubocop --regenerate-todo` will update the todo file
# with the latest state of the onion (using the same options
# as those documented at the top of the todo file). This is
# useful for a gradual migration of the codebase.
#
inherit_from: .rubocop_todo.yml

plugins:
  - rubocop-thread_safety
  - rubocop-performance
  - rubocop-rspec

AllCops:
  NewCops: enable
  UseCache: true
  MaxFilesInCache: 100
  TargetRubyVersion: 3.2
  Exclude:
    # The V1 API is in maintenance mode. No changes allowed ðŸš­
    - 'apps/api/v1/**/*'
    - 'migrate/**/*'
    - 'node_modules/**/*'
    - 'tests/unit/ruby/try/**/*'
    - 'tests/unit/ruby/rspec/**/*'
    - 'vendor/**/*'

Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: comma

# Offense count: 189
# This cop supports safe autocorrection (--autocorrect).
# Configuration parameters: EnforcedStyle, ConsistentQuotesInMultiline.
# SupportedStyles: single_quotes, double_quotes
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

# The Style/DoubleNegation cop is disabled because double negation provides
# a concise, idiomatic way to convert values to boolean in Ruby. Alternative
# approaches like ternary expressions or comparison with nil create unnecessary
# verbosity without adding clarity. In cases where boolean coercion is the
# explicit intent, !! clearly communicates this purpose to other Ruby developers.
Style/DoubleNegation:
  Enabled: false

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Gemspec/DeprecatedAttributeAssignment:
  Enabled: true

Gemspec/DevelopmentDependencies:
  Enabled: true

Layout/ElseAlignment:
  Enabled: false

# Offense count: 9
# This cop supports safe autocorrection (--autocorrect).
# Configuration parameters: EnforcedStyleAlignWith, Severity.
# SupportedStylesAlignWith: keyword, variable, start_of_line
Layout/EndAlignment:
  Enabled: false

# Offense count: 23
# This cop supports safe autocorrection (--autocorrect).
# Configuration parameters: AllowForAlignment, AllowBeforeTrailingComments, ForceEqualSignAlignment.
Layout/ExtraSpacing:
  Enabled: false

# Offense count: 7
# This cop supports safe autocorrection (--autocorrect).
# Configuration parameters: EnforcedStyle.
# SupportedStyles: normal, indented_internal_methods
Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods
  Enabled: true

Layout/IndentationWidth:
  # We don't want to enforce indentation width because it's doing weird things
  # with if/else statements that capture values. The `if` expression is aligned
  # with the right side of the `test` but the `else` expression is aligned with
  # the start of the line.
  Width: 2
  Enabled: false

Layout/HashAlignment:
  Enabled: false

Layout/FirstHashElementIndentation:
  Enabled: false

Lint/Void:
  Enabled: false

Metrics/AbcSize:
  Enabled: false
  Max: 20

Metrics/ClassLength:
  Enabled: true
  Max: 350

Metrics/MethodLength:
  Enabled: true
  Max: 50
  CountAsOne: ['method_call']

Metrics/ModuleLength:
  Enabled: true
  Max: 350
  CountAsOne: ['method_call']

Performance/Size:
  Enabled: true
  Exclude: []

Naming/AsciiIdentifiers:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Style/NegatedIfElseCondition:
  Enabled: true

Style/TrailingCommaInArguments:
  Enabled: true
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: comma
