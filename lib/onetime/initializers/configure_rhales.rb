# lib/onetime/initializers/configure_rhales.rb

require 'rhales'

# Session wrapper that adapts Rack session to Rhales expectations
#
# Rhales expects sessions to respond to #authenticated?, but Rack sessions don't have this method.
# This wrapper delegates everything to the underlying session while providing the authentication
# interface that Rhales needs.
class OnetimeSessionAdapter < SimpleDelegator
  def authenticated?
    # Otto authentication logic: requires session['authenticated'] == true AND external_id present
    self['authenticated'] == true && self['external_id'].to_s.length > 0
  end
end

module Onetime
  module Initializers
    # Configure Rhales framework for Onetime Secret
    #
    # This initializer sets up Rhales to:
    # - Use existing CSP nonce from request environment
    # - Inject hydration scripts in <head> for Vue.js SPA compatibility
    # - Set template paths to match existing structure
    #
    def configure_rhales
      Rhales.logger = Onetime.rhales_logger
      Rhales.configure do |config|
        # Use existing nonce from Onetime Secret middleware
        # This ensures all script tags use the same CSP nonce
        config.nonce_header_name = 'onetime.nonce'

        # Inject hydration scripts in <head> before Vue.js initialization
        # :earliest ensures window.__ONETIME_STATE__ is available when Vue mounts
        config.hydration.injection_strategy = :earliest

        # Default: Schema is source of truth (production mindset)
        config.hydration_authority = :schema  # default
        config.hydration_mismatch_format = :compact  # or :multiline, :compact, :sidebyside, :json

        # Vue.js mounts to #app, ensure hydration happens before mount
        config.hydration.mount_point_selectors = ['#app']

        # Set template paths to match existing structure
        templates_dir = File.join(OT::HOME, 'apps', 'web', 'core', 'templates')
        config.template_paths = [templates_dir]

        # Suppress unescaped variable warnings for known safe HTML variables
        # vite_assets_html contains <script> and <link> tags generated by Vite
        config.allowed_unescaped_variables = ['vite_assets_html']
      end
    end
  end
end
